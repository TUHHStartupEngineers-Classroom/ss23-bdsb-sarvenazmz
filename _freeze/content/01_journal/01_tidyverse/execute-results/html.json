{
  "hash": "d61395d63df2f76e033bc60d89c5c1a9",
  "result": {
    "markdown": "---\ntitle: \"Tidyverse\"\nauthor: \"Sarvenaz Mostafazadeh\"\n---\n\n\n# Tidyverse Challenge-1\n\n\n::: {.cell hash='01_tidyverse_cache/html/plot_0e79ec968d713c16960688b932d6994b'}\n\n```{.r .cell-code}\n#----1.libraries----\nlibrary(tidyverse)\nlibrary(readxl)\n\n# ----2.Importing files----\n#reading file\nbikes_path <- \"C:/Users/mosta/Desktop/1/ds_data/01_bike_sales/01_raw_data/bikes.xlsx\"\nbikeshops_path <- \"C:/Users/mosta/Desktop/1/ds_data/01_bike_sales/01_raw_data/bikeshops.xlsx\"\norderlines_path <- \"C:/Users/mosta/Desktop/1/ds_data/01_bike_sales/01_raw_data/orderlines.xlsx\"\n\n#Import the excel files\nbikes_tbl <- read_excel(bikes_path)\nbikeshops_tbl <- read_excel(bikeshops_path)\norderlines_tbl <- read_excel(orderlines_path)\n\n##----3.Examining data\nglimpse(orderlines_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Rows: 15,644\n#> Columns: 7\n#> $ rownumber   <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"…\n#> $ order.id    <dbl> 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7…\n#> $ order.line  <dbl> 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2…\n#> $ order.date  <dttm> 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-01-1…\n#> $ customer.id <dbl> 2, 2, 10, 10, 6, 6, 6, 6, 6, 22, 8, 8, 8, 8, 16, 16, 16, 1…\n#> $ product.id  <dbl> 2681, 2411, 2629, 2137, 2367, 1973, 2422, 2655, 2247, 2408…\n#> $ quantity    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1…\n```\n:::\n\n```{.r .cell-code}\n##----4.joining data----\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\nleft_join(bikes_tbl,by=c(\"product.id\" = \"bike.id\")) %>%\nleft_join(bikeshops_tbl,by=c(\"customer.id\" = \"bikeshop.id\"))\n\n##---5.Wrangling Data----\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  \n##----6.Business insights----\n\n#6.1.Total sales by category----\n#Separate category name\nseparate(col=category,into=c(\"category.1\", \"category.2\", \"category.3\"),sep=\" - \") %>%\n#Add the total price (price * quantity) \nmutate(total.price=price*quantity) %>%\n#Eliminating the unnecessary columns\nselect(-rownumber,-gender) %>%\n#Reordering the data by selecting the columns in the desired order\nselect(order.id,contains(\"order\"),contains(\"model\"),contains(\"category\"),\n         price,quantity,total.price,everything()) %>%\n#Renaming columns\nrename(bikeshop = name) %>%\nset_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\n#6.2.Sales by location----\n##Step1-Manipulate----\nbike_orderlines_tbl <- bike_orderlines_wrangled_tbl %>%\n#Separating location into state and city\nseparate(location,into=c(\"city\",\"state\"),sep = \", \") %>%\n#Selecting columns\nselect(order_date,total_price,state) %>%\n#Grouping by state and summarizing sales\ngroup_by(state) %>%\nsummarize(sales=sum(total_price)) %>%\nungroup() %>%\n#Adding a column for currency format \nmutate(sales_text = scales::dollar(sales,big.mark=\".\",decimal.mark=\",\",prefix =\"\",suffix=\" €\"),\n         max_state=ifelse(sales==max(sales),state,\"\"))\n##Step2-Visualization----\nbike_orderlines_tbl %>%\nggplot(aes(x = state, y = sales, fill = max_state)) +\ngeom_col() +\nscale_fill_manual(values = c(\"#2DC6D6\", \"#FFC700\")) +\ngeom_label(aes(label = sales_text), nudge_y = 1000) +\nscale_y_continuous(labels = scales::dollar_format(big.mark = \".\", decimal.mark = \",\", prefix = \"\", suffix = \" €\")) +\nlabs(title = \"Revenue by State\", subtitle = \"Total Sales\", x = \"State\", y = \"Revenue\") +\ntheme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/plot-1.png){width=960}\n:::\n:::\n\n\n\n# Tidyverse Challenge-2\n\n\n::: {.cell hash='01_tidyverse_cache/html/plots_ddeedd336fbdec2e3aaab7f0ac5fe4eb'}\n\n```{.r .cell-code}\n#----1.libraries----\nlibrary(tidyverse)\nlibrary(readxl)\n\n# ----2.Importing files----\n#reading file\nbikes_path <- \"C:/Users/mosta/Desktop/1/ds_data/01_bike_sales/01_raw_data/bikes.xlsx\"\nbikeshops_path <- \"C:/Users/mosta/Desktop/1/ds_data/01_bike_sales/01_raw_data/bikeshops.xlsx\"\norderlines_path <- \"C:/Users/mosta/Desktop/1/ds_data/01_bike_sales/01_raw_data/orderlines.xlsx\"\n\n#Import the excel files\nbikes_tbl <- read_excel(bikes_path)\nbikeshops_tbl <- read_excel(bikeshops_path)\norderlines_tbl <- read_excel(orderlines_path)\n\n##----3.Examining data\nglimpse(orderlines_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Rows: 15,644\n#> Columns: 7\n#> $ rownumber   <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"…\n#> $ order.id    <dbl> 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7…\n#> $ order.line  <dbl> 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2…\n#> $ order.date  <dttm> 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-01-1…\n#> $ customer.id <dbl> 2, 2, 10, 10, 6, 6, 6, 6, 6, 22, 8, 8, 8, 8, 16, 16, 16, 1…\n#> $ product.id  <dbl> 2681, 2411, 2629, 2137, 2367, 1973, 2422, 2655, 2247, 2408…\n#> $ quantity    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1…\n```\n:::\n\n```{.r .cell-code}\n##----4.joining data----\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\nleft_join(bikes_tbl,by=c(\"product.id\" = \"bike.id\")) %>%\nleft_join(bikeshops_tbl,by=c(\"customer.id\" = \"bikeshop.id\"))\n\n##---5.Wrangling Data----\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  \n##----6.Business insights----\n\n#6.1.Total sales by category----\n#Separate category name\nseparate(col=category,into=c(\"category.1\", \"category.2\", \"category.3\"),sep=\" - \") %>%\n#Add the total price (price * quantity) \nmutate(total.price=price*quantity) %>%\n#Eliminating the unnecessary columns\nselect(-rownumber,-gender) %>%\n#Reordering the data by selecting the columns in the desired order\nselect(order.id,contains(\"order\"),contains(\"model\"),contains(\"category\"),\n         price,quantity,total.price,everything()) %>%\n#Renaming columns\nrename(bikeshop = name) %>%\nset_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\n#6.2.Sales by location and year----\n##Step1-Manipulate----\nbike_orderlines_tbl <- bike_orderlines_wrangled_tbl %>%\n#Separating location into state and city\nseparate(location,into=c(\"city\",\"state\"),sep = \", \") %>%\n#Extracting year from order_date\nmutate(year=year(order_date)) %>%\n#Selecting columns\nselect(year,state,total_price) %>%\n#Grouping by year and state, and summarizing sales\ngroup_by(year,state) %>%\nsummarize(sales=sum(total_price)) %>%\nungroup() %>%\n#Adding a column for currency format \nmutate(sales_text = scales::dollar(sales,big.mark=\".\",decimal.mark=\",\",prefix=\"\",suffix =\" €\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'year'. You can override using the\n#> `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n##Step2-Visualize----\nbike_orderlines_tbl %>%\nggplot(aes(x=year, y=sales, fill=state)) +\ngeom_col() +\ngeom_label(aes(label=sales_text), color=\"white\", size=2) +\nscale_y_continuous(labels=scales::dollar_format(big.mark = \".\", decimal.mark = \",\", prefix = \"\", suffix = \" €\")) +\nlabs(title=\"Revenue by State and Year\", subtitle=\"Total Sales\", x=\"Year\", y=\"Revenue\") +\nfacet_wrap(~state, ncol=4) +\ntheme(axis.text.x=element_text(angle=45,hjust=1))\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/plots-1.png){width=960}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}