{
  "hash": "725cfa53bae50da7ee593652c496bb72",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Sarvenaz Mostafazadeh\"\n---\n\n\n# Data Visualization Challenge-1\n\n\n::: {.cell hash='04_data_visualization_cache/html/plot_347cc2d022f21e8411941c1e19b6ff16'}\n\n```{.r .cell-code}\n##----.libraries----\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales)\n\n##----1.Read the data----\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 311447 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n##----2.Filter data for date and countries----\nfiltered_data <- covid_data_tbl %>%\n  filter(location %in% c(\"Germany\", \"United Kingdom\", \"France\", \"Spain\", \"United States\")) %>%\n  filter(date <= ymd(\"2022-04-19\"))%>%\n  filter(!is.na(total_cases))\n\n##----3.Plot----\ncolors <- c(\"Germany\" = \"purple\", \"United Kingdom\" = \"green\", \"France\" = \"orange\",\n            \"Spain\" = \"pink\", \"United States\" = \"yellow\")\n\nus_cases <- max(filtered_data$total_cases[filtered_data$location == \"United States\" & !is.na(filtered_data$total_cases)])\n\nggplot(filtered_data, aes(x = date, y = total_cases, color = location)) +\n  geom_line(size = 1) +\n  scale_color_manual(values = colors) +\n  labs(x = \"\", y = \"Cumulative Cases\", title = \"COVID-19 confirmed cases worldwide\", subtitle = \"As of 19/04/2022\") +\n  scale_x_date(\n    date_labels = \"%B'%y\",\n    date_breaks = \"1 month\",\n    labels = function(x) format(x, format = \"%B'%y\")\n  ) +\n  scale_y_continuous(\n    labels = function(x) paste0(format(x / 1e6, scientific = FALSE), \"M\"),\n    breaks = c(0, 50e6, 100e6, 150e6),\n    limits = c(0, 150e6)\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    plot.background = element_rect(fill = \"darkgrey\")\n  ) +\n  labs(color = \"Country\") +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels\n    axis.ticks.x = element_blank()\n  ) +\n  geom_label(\n    data = filtered_data %>% filter(location == \"United States\" & total_cases == us_cases),\n    aes(\n      x = date, y = total_cases,\n      label = paste0(format(us_cases, scientific = FALSE, big.mark = \".\", decimal.mark = \",\"))\n    ),\n    fill = \"red\",\n    color = \"white\",\n    fontface = \"bold\",\n    label.padding = unit(0.5, \"lines\"),\n    label.size = 0.15,\n    label.r = unit(0.15, \"lines\")\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/plot-1.png){width=960}\n:::\n:::\n\n\n# Data Visualization Challenge-2\n\n\n::: {.cell hash='04_data_visualization_cache/html/plots_f70eedab9838a4bb1248faf86b5abf9f'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(maps)\n\n##----1.Access the data----\nworld <- map_data(\"world\")\n\n##----2.Read the data----\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 311447 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ndate_to_filter <- as.Date(\"2021-04-16\")\n\n##----3.Calculation of mortality rate----\nplot_data <- covid_data_tbl %>%\n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>%\n  filter(date <= as.Date(\"2022-04-19\")) %>%\n  filter(!(is.na(continent)))%>%\n  group_by(location) %>%\n  summarize(deaths_on_that_date = sum(new_deaths[date <= as.Date(\"2022-04-19\")], na.rm = TRUE),\n            population_on_that_date = population[date == as.Date(\"2022-04-19\")],\n            mortality_rate = deaths_on_that_date * 100 / population_on_that_date)\n\n##----4.Calculate total deaths worldwide because we need it in the subtitle----\ndeaths_worldwide_on_that_date <- round(sum(plot_data$deaths_on_that_date, na.rm = TRUE) / 1e6, digits = 1)\n\n##----6.Plot----\nggplot(plot_data, aes(map_id = location)) +\n  geom_map(aes(fill = mortality_rate), map = world) +\n  expand_limits(x = world$long, y = world$lat) +\n  scale_fill_gradient(low = \"red\", high = \"black\", na.value = \"grey\", breaks = c(0.20, 0.40, 0.60), labels = c(\"0.20%\", \"0.40%\", \"0.60%\")) +\n  labs(title = \"Confirmed COVID-19 deaths relative to the size of the population\",\n       subtitle = paste0(\"Around \", deaths_worldwide_on_that_date, \" Million\", \" confirmed COVID-19 deaths worldwide\"),\n       fill = \"Mortality Rate\") +\n  theme_void() +\n  annotate(\n    \"text\",\n    x = max(world$long) - 2,\n    y = min(world$lat) + 1,\n    label = \"Date: 04/16/2021\",\n    hjust = 1,\n    vjust = 0,\n    size = 4,\n    color = \"black\"\n  )\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/plots-1.png){width=960}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}